<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGAAAABgCAYAAADimHc4AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EQAACxEBf2RfkQAAA5VJREFUeF7tncurTlEYxj9yF1HKhJTLxGXAgL9Abn+BEQkZmDJmpIiIGCAmSJka
        uYwMREzcSrkMEXK/5fY8A7XT07dX39qXd631/upXp06nnnd956y937XXXmfgOI7jOI7jOI4DXsG3FX/C
        PzU+hWOh0wA/oBrkOjdApwG+QzXAdV6GTgN8g2qA6/wNF0Enki9QDXCI+6ETyWeoBjdEXrSnQCeCT1AN
        bqiboRPBR6gGNtQ70IlgBpxZ8f8pZTdUA1+qnHYvwYWwE2bBr1CFKdk3cAHshLNQhSjdi7ATVkIVoHRf
        w864DVWIku30A+DtpgpRshdgZ0yG/MRVkBL9BZfDTjkAVZgSPQU7Zz7kJ68ClSTXz+bCXuAytApVkntg
        b/BBjApVii/gNNgbY+BjqMKV4FbYO7ugCpe7D+E42DtctIt5jpCqa6EZSlsfugZNsQKqoDnKW2/Wa45b
        UAXOzdPQJCWsD/XadNUxEXJnnQqei702XSFwa4oKnoMvYa9NVwjzYMh+0hTdBpMgx/UhM01XCOuhKiJl
        18FkyG196DpMjlzWh8w2XXXksj5ktukK4QxURaWi6aYrBD6kVoWl4l6YPKmuD7Hpmg6TZxNUBVp3O8yC
        FNeHkmq6QjgJVaFWZSOZDbMh99CrQi3aywarNjkPVaEWvQmzesdtDVSFWpOv2HKanASzgZt3n0BVsAXf
        wbvwGFwMs2MfVIVXfQanQqdhlsKQMyf8fIkW4KkpN6Aa8KrnoNMCW6Aa8Kq8LeXtqdMw/O3nvK4GvWo2
        bb41VkE14FU5PfnhTi2xA6pB/ycvzLxAOy1R9xjyKHRaZCNUA5+Tpilhh7R5HkAVPBfNsxOq4LloHt5i
        8u0RFT4Hk2AOfARVAambDDx5K8dNusmxGnLh7Tkc9VBYSzqO4zhOMiyDR+B9yFN5Kb8+DC2sjFrPNzLc
        kngcDjvQiS/zcVfCBNg11vNFweL4Wo8qSsnOucsireeL5gRUhQyzy2cF1vNFwTl1lHPk+Oe+BLaN9XzR
        8IKmCgjxEGwb6/miiXkecA+2jfV80cT8/4EPsG2s54uGIVX4EN/DtrGeLxqfgnqGHaQKH+JB2DbW80XD
        9n2U42r4M13s07eerxHYvqsihsnbw66wni8atu1XoSpEeQWOh11hPV8jsEi278P+3Pk9/mb1UZz1fI3B
        9p0dJO8geA9O+TUvaBbmVOv5HMdxHMdxHMfJisHgL8hX+OIAoKSoAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="btnGHQuayLai.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxIAAAsSAdLdfvwAAADNSURBVEhL7dZBDgFBFIThvgThKuIAOLaNBKuxsOcg1JNI
        3jw16X4lMRbzJ9/CRFcnEqJMjdUO7vAQ2dktpPvm0rcbpGNDinRsRJGOjSjSsRFFOjaiSMdGFL49nGH+
        ejUQG1H4jmDPLjB4eRxQ+WbQgT2/whI+igOqWPXyOMCsoBY7552gF3tTtIZa7JwnXdwiFj/qBfSKAypf
        9VIrDqh89rHas59/nQ4wyg9IU2xEkY6NKNKxEUU6NqJIN9qfPftragfZYAs7u4Gpf6mUJwiBvroUawkd
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>