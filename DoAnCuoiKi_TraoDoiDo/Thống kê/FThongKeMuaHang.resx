<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>