<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>