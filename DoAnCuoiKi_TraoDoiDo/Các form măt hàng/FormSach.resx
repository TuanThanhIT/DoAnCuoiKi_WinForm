<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AABJRU5ErkJggg==
</value>
  </data>
</root>