<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>