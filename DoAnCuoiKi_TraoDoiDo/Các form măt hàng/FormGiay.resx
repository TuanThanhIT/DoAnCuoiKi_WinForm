<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>